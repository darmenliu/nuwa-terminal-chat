name: Release

on:
  release:
    types: [created]

permissions:
  contents: write

defaults:
  run:
    shell: bash

jobs:
  release:
    name: Create Release
    runs-on: 'ubuntu-latest'
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
          - goos: linux
            goarch: arm64
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v5
        with:
          go-version: '1.22'
      - name: Get OS and arch info
        run: |
          BINARY_NAME=nuwa-terminal-${{ matrix.goos }}-${{ matrix.goarch }}
          echo "BINARY_NAME=$BINARY_NAME" >> $GITHUB_ENV
          echo "GOOS=${{ matrix.goos }}" >> $GITHUB_ENV
          echo "GOARCH=${{ matrix.goarch }}" >> $GITHUB_ENV
      - name: Build
        run: |
          go build -o "$BINARY_NAME" -v ./cmd
      - name: Generate Release Notes
        run: |
          # if there is no tag, get all commits
          if ! git describe --tags --abbrev=0 2>/dev/null; then
            git log --pretty='format:* %h %s%n  * %an <%ae>' --no-merges >> ".github/RELEASE-TEMPLATE.md"
          else
            git log $(git describe --tags --abbrev=0)..HEAD --pretty='format:* %h %s%n  * %an <%ae>' --no-merges >> ".github/RELEASE-TEMPLATE.md"
          fi
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          body_path: ".github/RELEASE-TEMPLATE.md"
          files: ${{ env.BINARY_NAME }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
